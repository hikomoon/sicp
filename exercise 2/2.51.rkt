#lang racket
(require sicp)
(require "../utils/index.rkt")
(require "../utils/listoperations.rkt")

(define (beside painter1 painter2)
    (let ((split-point (make-vert 0.5 0)))
        (let ((paint-left (transform-painter painter1 (make-vert 0 0) split-point (make-vert 0 1)))
            (paint-right (transform-painter painter2 split-point (make-vert 1 0) (make-vert 0.5 1))))
            (lambda (frame)
                (paint-left frame)
                (paint-right frame)))))
(define (below painter1 painter2)
    (let ((split-point (make-vert 0 0.5)))
        (let ((paint-left (transform-painter painter1 (make-vert 0 0) (make-vert 1 0) split-point))
            (paint-right (transform-painter painter2 split-point (make-vert 1 0.5) (make-vert 0 1))))
            (lambda (frame)
                (paint-left frame)
                (paint-right frame)))))

(define (below-v1 painter1 painter2)
    (rotate90 (beside (rotate270 painter1) (rotate270 painter2))))